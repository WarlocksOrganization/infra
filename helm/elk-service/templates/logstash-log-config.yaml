apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configMap.logging.name }}
  labels:
    task: logging
    k8s-app: logstash
data:
  logging.conf: |
    input {
      kafka {
        bootstrap_servers => "kraft-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
        topics => ["logging"]
        consumer_threads => 1
        decorate_events => true
      }
    }

    filter {
      json {
        source => "message"
      }

      mutate {
        rename => { "timestamp" => "log_timestamp" }

        add_field => {
          "eventType"   => "%{[parsed][eventType]}"
          "createdAt"   => "%{[parsed][createdAt]}"
          "patchVersion" => "%{[parsed][patchVersion]}"
          "gameId"      => "%{[parsed][gameId]}"
          "mapId"       => "%{[parsed][mapId]}"
          "playerCount" => "%{[parsed][playerCount]}"
        }
      }
      if [parsed][eventType] == "gameEnd" {
        clone {
          clones => ["player_logs_clone"]
        }

        if "_grokparsefailure" not in [tags] {
          if [type] == "player_logs_clone" {
            mutate {
              add_field => { "[@metadata][original_event]" => "%{eventType}" }
            }
            split {
              field => "[parsed][playerLogs]"
              target => "playerLog"
            }
            mutate {
              add_field => {
                "eventType" => "classDataV2"
                "userId"    => "%{[playerLog][userId]}"
                "score"     => "%{[playerLog][roundScore][0]}" # 예: round1 점수
                "rank"      => "%{[playerLog][roundRank][0]}"  # 예: round1 랭크
                "round"     => "round1"
                "class"     => "%{[playerLog][classCode]}"
              }
              remove_field => ["parsed"]
            }
          }
        }
      }
      date {
        match => ["log_timestamp", "ISO8601"]
        target => "@timestamp"
        remove_field => ["log_timestamp"]
      }
    }

    output {
      elasticsearch {
        hosts => ["elasticsearch:9200"]
        user => "${ELASTIC_USERNAME}"
        password => "${ELASTIC_PASSWORD}"
        index => "logs-order-%{+YYYY.MM.dd}"
        action => "create"
      }
    }